unit ClassInteger;

interface

Uses
  StrUtils, System.SysUtils, System.Classes;

Type
   TField = class(TComponent)
   public

  constructor Create(); override;

  destructor Destroy; override;

  end;

    TInteger = Class

      private FAssigned: Boolean;
    FValue: Integer;
    function getValue: Integer;
    procedure setValue(const Value: Integer);
    function getAssigned: Boolean;
    procedure setAssigned(const Value: Boolean);

  public
    Procedure LoadFromField(Field: TField);
    property Assigned: Boolean read getAssigned write setAssigned;
    property Value: Integer read getValue write setValue;
    procedure clear;
  published
  end;

implementation

{ TInteger }

procedure TInteger.clear;
begin
  FValue := 0;
  Assigned := false;
end;

function TInteger.getAssigned: Boolean;
begin
  result := FAssigned;
end;

function TInteger.getValue: Integer;
begin
  result := FValue;
end;

procedure TInteger.LoadFromField(Field: TField);
begin
  if Not(Field.IsNull) then
  BEGIN
    Value := Field.AsInteger;
  END;

end;

procedure TInteger.setAssigned(const Value: Boolean);
begin

end;

procedure TInteger.setValue(const Value: Integer);
begin

end;

end.
